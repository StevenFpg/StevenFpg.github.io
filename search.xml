<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>超实用的Excel导入导出-POI方式实现</title>
      <link href="/2020/05/05/chao-shi-yong-de-excel-dao-ru-dao-chu-poi-fang-shi-shi-xian/"/>
      <url>/2020/05/05/chao-shi-yong-de-excel-dao-ru-dao-chu-poi-fang-shi-shi-xian/</url>
      
        <content type="html"><![CDATA[<h2 id="Apache-POI使用详解"><a href="#Apache-POI使用详解" class="headerlink" title="Apache POI使用详解"></a>Apache POI使用详解</h2><h3 id="Apache-POI常用的类"><a href="#Apache-POI常用的类" class="headerlink" title="Apache POI常用的类"></a>Apache POI常用的类</h3><ul><li>HSSF － 提供读写Microsoft Excel XLS格式档案的功能。</li><li>XSSF － 提供读写Microsoft Excel OOXML XLSX格式档案的功能。</li><li>HWPF － 提供读写Microsoft Word DOC97格式档案的功能。</li><li>XWPF － 提供读写Microsoft Word DOC2003格式档案的功能。</li><li>HSLF － 提供读写Microsoft PowerPoint格式档案的功能。</li><li>HDGF － 提供读Microsoft Visio格式档案的功能。</li><li>HPBF － 提供读Microsoft Publisher格式档案的功能。</li><li>HSMF － 提供读Microsoft Outlook格式档案的功能。</li><li>Excel中的工作簿、工作表、行、单元格中的关系：<blockquote><p>一个Excel文件对应于一个workbook(HSSFWorkbook)，<br>一个workbook可以有多个sheet（HSSFSheet）组成，<br>一个sheet是由多个row（HSSFRow）组成，<br>一个row是由多个cell（HSSFCell）组成</p></blockquote></li></ul><hr><h2 id="基础示例"><a href="#基础示例" class="headerlink" title="基础示例"></a>基础示例</h2><ul><li><strong>引入apache poi的依赖</strong><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org.apache.poi<span class="token operator">&lt;</span>/groupId<span class="token operator">></span>    <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>poi<span class="token operator">&lt;</span>/artifactId<span class="token operator">></span>    <span class="token operator">&lt;</span>version<span class="token operator">></span>3.8<span class="token operator">&lt;</span>/version<span class="token operator">></span>  <span class="token operator">&lt;</span>/dependency<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="示例一：在桌面上生成一个Excel文件"><a href="#示例一：在桌面上生成一个Excel文件" class="headerlink" title="示例一：在桌面上生成一个Excel文件"></a>示例一：在桌面上生成一个Excel文件</h3><pre class="line-numbers language-bash"><code class="language-bash">public static void createExcel<span class="token punctuation">(</span><span class="token punctuation">)</span> throws IOException<span class="token punctuation">{</span>    // 获取桌面路径    FileSystemView fsv <span class="token operator">=</span> FileSystemView.getFileSystemView<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    String desktop <span class="token operator">=</span> fsv.getHomeDirectory<span class="token punctuation">(</span><span class="token punctuation">)</span>.getPath<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    String filePath <span class="token operator">=</span> desktop + <span class="token string">"/template.xls"</span><span class="token punctuation">;</span>    File <span class="token function">file</span> <span class="token operator">=</span> new File<span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>    OutputStream outputStream <span class="token operator">=</span> new FileOutputStream<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>    HSSFWorkbook workbook <span class="token operator">=</span> new HSSFWorkbook<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    HSSFSheet sheet <span class="token operator">=</span> workbook.createSheet<span class="token punctuation">(</span><span class="token string">"Sheet1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    HSSFRow row <span class="token operator">=</span> sheet.createRow<span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>    row.createCell<span class="token punctuation">(</span>0<span class="token punctuation">)</span>.setCellValue<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    row.createCell<span class="token punctuation">(</span>1<span class="token punctuation">)</span>.setCellValue<span class="token punctuation">(</span><span class="token string">"订单号"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    row.createCell<span class="token punctuation">(</span>2<span class="token punctuation">)</span>.setCellValue<span class="token punctuation">(</span><span class="token string">"下单时间"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    row.createCell<span class="token punctuation">(</span>3<span class="token punctuation">)</span>.setCellValue<span class="token punctuation">(</span><span class="token string">"个数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    row.createCell<span class="token punctuation">(</span>4<span class="token punctuation">)</span>.setCellValue<span class="token punctuation">(</span><span class="token string">"单价"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    row.createCell<span class="token punctuation">(</span>5<span class="token punctuation">)</span>.setCellValue<span class="token punctuation">(</span><span class="token string">"订单金额"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    row.setHeightInPoints<span class="token punctuation">(</span>30<span class="token punctuation">)</span><span class="token punctuation">;</span> // 设置行的高度    HSSFRow row1 <span class="token operator">=</span> sheet.createRow<span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span>    row1.createCell<span class="token punctuation">(</span>0<span class="token punctuation">)</span>.setCellValue<span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    row1.createCell<span class="token punctuation">(</span>1<span class="token punctuation">)</span>.setCellValue<span class="token punctuation">(</span><span class="token string">"NO00001"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    // 日期格式化    HSSFCellStyle cellStyle2 <span class="token operator">=</span> workbook.createCellStyle<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    HSSFCreationHelper creationHelper <span class="token operator">=</span> workbook.getCreationHelper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cellStyle2.setDataFormat<span class="token punctuation">(</span>creationHelper.createDataFormat<span class="token punctuation">(</span><span class="token punctuation">)</span>.getFormat<span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd HH:mm:ss"</span><span class="token punctuation">))</span><span class="token punctuation">;</span>    sheet.setColumnWidth<span class="token punctuation">(</span>2, 20 * 256<span class="token punctuation">)</span><span class="token punctuation">;</span> // 设置列的宽度    HSSFCell cell2 <span class="token operator">=</span> row1.createCell<span class="token punctuation">(</span>2<span class="token punctuation">)</span><span class="token punctuation">;</span>    cell2.setCellStyle<span class="token punctuation">(</span>cellStyle2<span class="token punctuation">)</span><span class="token punctuation">;</span>    cell2.setCellValue<span class="token punctuation">(</span>new Date<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">;</span>    row1.createCell<span class="token punctuation">(</span>3<span class="token punctuation">)</span>.setCellValue<span class="token punctuation">(</span>2<span class="token punctuation">)</span><span class="token punctuation">;</span>    // 保留两位小数    HSSFCellStyle cellStyle3 <span class="token operator">=</span> workbook.createCellStyle<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cellStyle3.setDataFormat<span class="token punctuation">(</span>HSSFDataFormat.getBuiltinFormat<span class="token punctuation">(</span><span class="token string">"0.00"</span><span class="token punctuation">))</span><span class="token punctuation">;</span>    HSSFCell cell4 <span class="token operator">=</span> row1.createCell<span class="token punctuation">(</span>4<span class="token punctuation">)</span><span class="token punctuation">;</span>    cell4.setCellStyle<span class="token punctuation">(</span>cellStyle3<span class="token punctuation">)</span><span class="token punctuation">;</span>    cell4.setCellValue<span class="token punctuation">(</span>29.5<span class="token punctuation">)</span><span class="token punctuation">;</span>    // 货币格式化    HSSFCellStyle cellStyle4 <span class="token operator">=</span> workbook.createCellStyle<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    HSSFFont font <span class="token operator">=</span> workbook.createFont<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    font.setFontName<span class="token punctuation">(</span><span class="token string">"华文行楷"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    font.setFontHeightInPoints<span class="token punctuation">((</span>short<span class="token punctuation">)</span>15<span class="token punctuation">)</span><span class="token punctuation">;</span>    font.setColor<span class="token punctuation">(</span>HSSFColor.RED.index<span class="token punctuation">)</span><span class="token punctuation">;</span>    cellStyle4.setFont<span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>    HSSFCell cell5 <span class="token operator">=</span> row1.createCell<span class="token punctuation">(</span>5<span class="token punctuation">)</span><span class="token punctuation">;</span>    cell5.setCellFormula<span class="token punctuation">(</span><span class="token string">"D2*E2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  // 设置计算公式    // 获取计算公式的值    HSSFFormulaEvaluator e <span class="token operator">=</span> new HSSFFormulaEvaluator<span class="token punctuation">(</span>workbook<span class="token punctuation">)</span><span class="token punctuation">;</span>    cell5 <span class="token operator">=</span> e.evaluateInCell<span class="token punctuation">(</span>cell5<span class="token punctuation">)</span><span class="token punctuation">;</span>    System.out.println<span class="token punctuation">(</span>cell5.getNumericCellValue<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">;</span>    workbook.setActiveSheet<span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>    workbook.write<span class="token punctuation">(</span>outputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>    outputStream.close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="示例2：读取Excel，解析数据"><a href="#示例2：读取Excel，解析数据" class="headerlink" title="示例2：读取Excel，解析数据"></a>示例2：读取Excel，解析数据</h3><pre class="line-numbers language-bash"><code class="language-bash">public static void readExcel<span class="token punctuation">(</span><span class="token punctuation">)</span> throws IOException<span class="token punctuation">{</span>    FileSystemView fsv <span class="token operator">=</span> FileSystemView.getFileSystemView<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    String desktop <span class="token operator">=</span> fsv.getHomeDirectory<span class="token punctuation">(</span><span class="token punctuation">)</span>.getPath<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    String filePath <span class="token operator">=</span> desktop + <span class="token string">"/template.xls"</span><span class="token punctuation">;</span>    FileInputStream fileInputStream <span class="token operator">=</span> new FileInputStream<span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>    BufferedInputStream bufferedInputStream <span class="token operator">=</span> new BufferedInputStream<span class="token punctuation">(</span>fileInputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>    POIFSFileSystem fileSystem <span class="token operator">=</span> new POIFSFileSystem<span class="token punctuation">(</span>bufferedInputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>    HSSFWorkbook workbook <span class="token operator">=</span> new HSSFWorkbook<span class="token punctuation">(</span>fileSystem<span class="token punctuation">)</span><span class="token punctuation">;</span>    HSSFSheet sheet <span class="token operator">=</span> workbook.getSheet<span class="token punctuation">(</span><span class="token string">"Sheet1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    int lastRowIndex <span class="token operator">=</span> sheet.getLastRowNum<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System.out.println<span class="token punctuation">(</span>lastRowIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>int i <span class="token operator">=</span> 0<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> lastRowIndex<span class="token punctuation">;</span> i++<span class="token punctuation">)</span> <span class="token punctuation">{</span>        HSSFRow row <span class="token operator">=</span> sheet.getRow<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>row <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>        short lastCellNum <span class="token operator">=</span> row.getLastCellNum<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>int j <span class="token operator">=</span> 0<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> lastCellNum<span class="token punctuation">;</span> j++<span class="token punctuation">)</span> <span class="token punctuation">{</span>            String cellValue <span class="token operator">=</span> row.getCell<span class="token punctuation">(</span>j<span class="token punctuation">)</span>.getStringCellValue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System.out.println<span class="token punctuation">(</span>cellValue<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    bufferedInputStream.close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="Java-Web-中导出和导入Excel"><a href="#Java-Web-中导出和导入Excel" class="headerlink" title="Java Web 中导出和导入Excel"></a>Java Web 中导出和导入Excel</h2><h3 id="导出示例"><a href="#导出示例" class="headerlink" title="导出示例"></a>导出示例</h3><pre class="line-numbers language-bash"><code class="language-bash">@SuppressWarnings<span class="token punctuation">(</span><span class="token string">"resource"</span><span class="token punctuation">)</span>@RequestMapping<span class="token punctuation">(</span><span class="token string">"/export"</span><span class="token punctuation">)</span>    public void exportExcel<span class="token punctuation">(</span>HttpServletResponse response, HttpSession session, String name<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{</span>      String<span class="token punctuation">[</span><span class="token punctuation">]</span> tableHeaders <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"id"</span>, <span class="token string">"姓名"</span>, <span class="token string">"年龄"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>     HSSFWorkbook workbook <span class="token operator">=</span> new HSSFWorkbook<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    HSSFSheet sheet <span class="token operator">=</span> workbook.createSheet<span class="token punctuation">(</span><span class="token string">"Sheet1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    HSSFCellStyle cellStyle <span class="token operator">=</span> workbook.createCellStyle<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        cellStyle.setAlignment<span class="token punctuation">(</span>HorizontalAlignment.CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>      cellStyle.setVerticalAlignment<span class="token punctuation">(</span>VerticalAlignment.CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>    Font font <span class="token operator">=</span> workbook.createFont<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      font.setColor<span class="token punctuation">(</span>HSSFColor.RED.index<span class="token punctuation">)</span><span class="token punctuation">;</span>      font.setBold<span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>    cellStyle.setFont<span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>    // 将第一行的三个单元格给合并    sheet.addMergedRegion<span class="token punctuation">(</span>new CellRangeAddress<span class="token punctuation">(</span>0, 0, 0, 2<span class="token punctuation">))</span><span class="token punctuation">;</span>    HSSFRow row <span class="token operator">=</span> sheet.createRow<span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>    HSSFCell beginCell <span class="token operator">=</span> row.createCell<span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>    beginCell.setCellValue<span class="token punctuation">(</span><span class="token string">"通讯录"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        beginCell.setCellStyle<span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>    row <span class="token operator">=</span> sheet.createRow<span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span>    // 创建表头    <span class="token keyword">for</span> <span class="token punctuation">(</span>int i <span class="token operator">=</span> 0<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> tableHeaders.length<span class="token punctuation">;</span> i++<span class="token punctuation">)</span> <span class="token punctuation">{</span>        HSSFCell cell <span class="token operator">=</span> row.createCell<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        cell.setCellValue<span class="token punctuation">(</span>tableHeaders<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        cell.setCellStyle<span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">users</span> <span class="token operator">=</span> new ArrayList<span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    users.add<span class="token punctuation">(</span>new User<span class="token punctuation">(</span>1L, <span class="token string">"张三"</span>, 20<span class="token punctuation">))</span><span class="token punctuation">;</span>    users.add<span class="token punctuation">(</span>new User<span class="token punctuation">(</span>2L, <span class="token string">"李四"</span>, 21<span class="token punctuation">))</span><span class="token punctuation">;</span>    users.add<span class="token punctuation">(</span>new User<span class="token punctuation">(</span>3L, <span class="token string">"王五"</span>, 22<span class="token punctuation">))</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>int i <span class="token operator">=</span> 0<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> users.size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i++<span class="token punctuation">)</span> <span class="token punctuation">{</span>        row <span class="token operator">=</span> sheet.createRow<span class="token punctuation">(</span>i + 2<span class="token punctuation">)</span><span class="token punctuation">;</span>        User user <span class="token operator">=</span> users.get<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        row.createCell<span class="token punctuation">(</span>0<span class="token punctuation">)</span>.setCellValue<span class="token punctuation">(</span>user.getId<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">;</span>            row.createCell<span class="token punctuation">(</span>1<span class="token punctuation">)</span>.setCellValue<span class="token punctuation">(</span>user.getName<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">;</span>            row.createCell<span class="token punctuation">(</span>2<span class="token punctuation">)</span>.setCellValue<span class="token punctuation">(</span>user.getAge<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    OutputStream outputStream <span class="token operator">=</span> response.getOutputStream<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     response.reset<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     response.setContentType<span class="token punctuation">(</span><span class="token string">"application/vnd.ms-excel"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response.setHeader<span class="token punctuation">(</span><span class="token string">"Content-disposition"</span>, <span class="token string">"attachment;filename=template.xls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          workbook.write<span class="token punctuation">(</span>outputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>    outputStream.flush<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        outputStream.close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="导入示例"><a href="#导入示例" class="headerlink" title="导入示例"></a>导入示例</h3><blockquote><ol><li>使用SpringMVC上传文件，需要用到commons-fileupload</li></ol></blockquote><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>groupId<span class="token operator">></span>commons-fileupload<span class="token operator">&lt;</span>/groupId<span class="token operator">></span>    <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>commons-fileupload<span class="token operator">&lt;</span>/artifactId<span class="token operator">></span>    <span class="token operator">&lt;</span>version<span class="token operator">></span>1.3<span class="token operator">&lt;</span>/version<span class="token operator">></span><span class="token operator">&lt;</span>/dependency<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><blockquote><p>2.需要在spring的配置文件中配置一下multipartResolver</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>bean name<span class="token operator">=</span><span class="token string">"multipartResolver"</span>          class<span class="token operator">=</span><span class="token string">"org.springframework.web.multipart.commons.CommonsMultipartResolver"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"defaultEncoding"</span> value<span class="token operator">=</span><span class="token string">"UTF-8"</span> /<span class="token operator">></span><span class="token operator">&lt;</span>/bean<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><blockquote><p>3.indedx.jsp</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"/Spring-Mybatis-Druid/user/export"</span><span class="token operator">></span>导出<span class="token operator">&lt;</span>/a<span class="token operator">></span> <span class="token operator">&lt;</span>br/<span class="token operator">></span><span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">"/Spring-Mybatis-Druid/user/import"</span> enctype<span class="token operator">=</span><span class="token string">"multipart/form-data"</span> method<span class="token operator">=</span><span class="token string">"post"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"file"</span> name<span class="token operator">=</span><span class="token string">"file"</span>/<span class="token operator">></span>     <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"submit"</span> value<span class="token operator">=</span><span class="token string">"导入Excel"</span><span class="token operator">></span><span class="token operator">&lt;</span>/form<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><blockquote><p>4.解析上传的.xls文件</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash">@SuppressWarnings<span class="token punctuation">(</span><span class="token string">"resource"</span><span class="token punctuation">)</span>@RequestMapping<span class="token punctuation">(</span><span class="token string">"/import"</span><span class="token punctuation">)</span>public void importExcel<span class="token punctuation">(</span>@RequestParam<span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">)</span> MultipartFile file<span class="token punctuation">)</span> throws Exception<span class="token punctuation">{</span>    InputStream inputStream <span class="token operator">=</span> file.getInputStream<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    BufferedInputStream bufferedInputStream <span class="token operator">=</span> new BufferedInputStream<span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>    POIFSFileSystem fileSystem <span class="token operator">=</span> new POIFSFileSystem<span class="token punctuation">(</span>bufferedInputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>    HSSFWorkbook workbook <span class="token operator">=</span> new HSSFWorkbook<span class="token punctuation">(</span>fileSystem<span class="token punctuation">)</span><span class="token punctuation">;</span>    //HSSFWorkbook workbook <span class="token operator">=</span> new HSSFWorkbook<span class="token punctuation">(</span>file.getInputStream<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">;</span>    HSSFSheet sheet <span class="token operator">=</span> workbook.getSheetAt<span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>    int lastRowNum <span class="token operator">=</span> sheet.getLastRowNum<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>int i <span class="token operator">=</span> 2<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> lastRowNum<span class="token punctuation">;</span> i++<span class="token punctuation">)</span> <span class="token punctuation">{</span>        HSSFRow row <span class="token operator">=</span> sheet.getRow<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        int <span class="token function">id</span> <span class="token operator">=</span> <span class="token punctuation">(</span>int<span class="token punctuation">)</span> row.getCell<span class="token punctuation">(</span>0<span class="token punctuation">)</span>.getNumericCellValue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String name <span class="token operator">=</span> row.getCell<span class="token punctuation">(</span>1<span class="token punctuation">)</span>.getStringCellValue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        int age <span class="token operator">=</span> <span class="token punctuation">(</span>int<span class="token punctuation">)</span> row.getCell<span class="token punctuation">(</span>2<span class="token punctuation">)</span>.getNumericCellValue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System.out.println<span class="token punctuation">(</span>id + <span class="token string">"-"</span> + name + <span class="token string">"-"</span> + age<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> POI </tag>
            
            <tag> Excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySql优化原则</title>
      <link href="/2020/05/03/mysql-you-hua-da-quan/"/>
      <url>/2020/05/03/mysql-you-hua-da-quan/</url>
      
        <content type="html"><![CDATA[<h3 id="最左前缀原则"><a href="#最左前缀原则" class="headerlink" title="最左前缀原则"></a>最左前缀原则</h3><blockquote><p>MySQL中的索引可以以一定顺序引用多列，这种索引叫作联合索引。如User表的name和city加联合索引就是<br>(name,city)o而最左前缀原则指的是，如果查询的时候查询条件精确匹配索引的左边连续<br>一列或几列，则此列就可以被用到。如下：</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash"><span class="token keyword">select</span> * from user where name<span class="token operator">=</span>xx and city<span class="token operator">=</span>xx <span class="token punctuation">;</span> ／／可以命中索引<span class="token keyword">select</span> * from user where name<span class="token operator">=</span>xx <span class="token punctuation">;</span> // 可以命中索引<span class="token keyword">select</span> * from user where city<span class="token operator">=</span>xx<span class="token punctuation">;</span> // 无法命中索引<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>如果查询条件有多个且只是顺序不同也能命中索引，因为查询引擎会自动优化匹配联合索引如:</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash">city <span class="token operator">=</span> xx and name <span class="token operator">=</span> xx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="注意避免冗余"><a href="#注意避免冗余" class="headerlink" title="注意避免冗余"></a>注意避免冗余</h3><blockquote><p>冗余索引指的是索引的功能相同，如（name,city ）和（name ）这两<br>个索引就是冗余索引，能够命中后者的查询肯定是能够命中前者的 在大多数情况下，都应该尽量扩展已有的索引而不是创建新索引。</p></blockquote><hr><h2 id="MySql如何为表字段添加索引？"><a href="#MySql如何为表字段添加索引？" class="headerlink" title="MySql如何为表字段添加索引？"></a>MySql如何为表字段添加索引？</h2><p><strong>1.添加PRIMARY KEY（主键索引）</strong></p><pre class="line-numbers language-bash"><code class="language-bash">ALTER TABLE <span class="token variable"><span class="token variable">`</span>表名<span class="token variable">`</span></span> ADD PRIMARY KEY <span class="token punctuation">(</span><span class="token variable"><span class="token variable">`</span>column<span class="token variable">`</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>2.添加UNIQUE（唯一索引）</strong></p><pre class="line-numbers language-bash"><code class="language-bash">ALTER TABLE <span class="token variable"><span class="token variable">`</span>表名<span class="token variable">`</span></span> ADD UNIQUE <span class="token punctuation">(</span><span class="token variable"><span class="token variable">`</span>column<span class="token variable">`</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>3.添加INDEX()普通索引</strong></p><pre class="line-numbers language-bash"><code class="language-bash">ALTER TABLE <span class="token string">'表名'</span> ADD INDEX INDEX_NAME <span class="token punctuation">(</span><span class="token variable"><span class="token variable">`</span>column<span class="token variable">`</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>4.添加FULLTEXT(全文索引)</strong></p><pre><code>ALTER TABLE `表名` ADD FULLTEXT (`column`)</code></pre><p><strong>5.添加多列索引</strong></p><pre><code>ALTER TABLE `表名` ADD INDEX INDEX_NAME (`column1`,`column2`,`column3`)</code></pre><hr><h2 id="当MySQL单表记录数过大时，数据库的CRUD性能会明显下降，一些常见的优化措施如下："><a href="#当MySQL单表记录数过大时，数据库的CRUD性能会明显下降，一些常见的优化措施如下：" class="headerlink" title="当MySQL单表记录数过大时，数据库的CRUD性能会明显下降，一些常见的优化措施如下："></a>当MySQL单表记录数过大时，数据库的CRUD性能会明显下降，一些常见的优化措施如下：</h2><p>1.<strong>限定数据的范围：</strong>务必禁止不带任何限制范围的查询语句<br>2.<strong>读/写分离：</strong>主库负责写，从库负责读<br>3.<strong>垂直分区：</strong>垂直分区是指数据表列的拆分，把一张列比较多的表拆分为多张表</p><blockquote><p>垂直拆分的缺点：主键会出现冗余，需要管理冗余列，并会引起join操作，垂直分区会让事务变的更加复杂</p></blockquote><p>4.<strong>水平分区：</strong>保持数据结果不变，通过某种策列进行存储分片，这样每一片数据分散到不同的表或者库中，达到分布式的目的</p><blockquote><p>水平拆分可以支撑非常大的数据量，需要注意的是分表只是单单解决了单表数据量大的问题，但由于表还在同一台机器上，其实对于提升MySQL的并发能力没有什么意义，所以&gt;水平拆分最好分库，水平拆分可以解决单表数据量大的问题，但分片事务难以解决，跨界点join性能较差，逻辑复杂，所以尽量不要对数据进行分片，因为拆分会带来逻辑、部署、运维的各种复杂度</p></blockquote><h3 id="两种数据库分片的常见解决方案"><a href="#两种数据库分片的常见解决方案" class="headerlink" title="两种数据库分片的常见解决方案"></a>两种数据库分片的常见解决方案</h3><ul><li><em><em>客户端代理： </em></em>分片逻辑在应用端，封装在jar包中，通过修改或者封装JDBC层来实现。 当当网的 ShardingJDBC 、阿里的TDDL是两种比较常用的实现。</li><li><em><em>中间件代理： </em></em>在应用和数据中间加了一个代理层。分片逻辑统一维护在中间件服务中。 我们现在谈的 Mycat、360的Atlas、网易的DDB等等都是这种架构的实现。</li></ul>]]></content>
      
      
      <categories>
          
          <category> MySql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇博客文章</title>
      <link href="/2020/05/02/di-yi-pian-bo-ke-wen-zhang/"/>
      <url>/2020/05/02/di-yi-pian-bo-ke-wen-zhang/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/05/02/hello-world/"/>
      <url>/2020/05/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
